def find_max_min(arr, left, right):
    # Base case: if there's only one element
    if left == right:
        return arr[left], arr[left]  # Return the element as both max and min
    # If there are two elements, compare them
    if right == left + 1:
        if arr[left] > arr[right]:
            return arr[left], arr[right]
        else:
            return arr[right], arr[left]
    # Divide the array into halves
    mid = (left + right) // 2
    max1, min1 = find_max_min(arr, left, mid)      # Find max and min in the left half
    max2, min2 = find_max_min(arr, mid + 1, right) # Find max and min in the right half
    # Combine results
    return max(max1, max2), min(min1, min2)
# Example usage
if __name__ == "__main__":
    example_array = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]
    max_value, min_value = find_max_min(example_array, 0, len(example_array) - 1)
    print("Maximum value:", max_value)
    print("Minimum value:", min_value)
